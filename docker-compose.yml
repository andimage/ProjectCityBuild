version: "3"

services:
    php-fpm:
        build:
            context: .
            dockerfile: docker/php-fpm/Dockerfile
            args:
                ENV: "DEV"
        ports:
            - "3000:3000" # Browsersync
            - "3001:3001" # Browsersync control panel
        networks:
            - pcb-web
        volumes:
            - "./:/var/www/html"
        links:
            - "mariadb:db"
        depends_on:
            - mariadb
            - redis
            - mailhog

    nginx:
        build:
            context: .
            dockerfile: docker/nginx/Dockerfile
        ports:
            - "80:80"
            - "443:443"
            - "8000:3000" # Browsersync
        volumes:
            - "./docker/nginx/certs/projectcitybuild.com+2.pem:/etc/letsencrypt/live/projectcitybuild.com/projectcitybuild.com+2.pem"
            - "./docker/nginx/certs/projectcitybuild.com+2-key.pem:/etc/letsencrypt/live/projectcitybuild.com/projectcitybuild.com+2-key.pem"
#            - "certbot-etc:/etc/letsencrypt"
#            - "certbot-var:/var/lib/letsencrypt"
#            - "dhparam:/etc/ssl/certs"
        links:
            - "php-fpm:pcb-laravel"
        networks:
            - pcb-web
        depends_on:
            - php-fpm
#            - certbot

#    certbot:
#        image: certbot/certbot
#        container_name: certbot
#        volumes:
#            - "certbot-etc:/etc/letsencrypt"
#            - "certbot-var:/var/lib/letsencrypt"
#            - "./:/var/www/html"
#        networks:
#            - pcb-web
#        command: certonly \
#            --webroot \
#            --webroot-path=/var/www/html \
#            --email noreply@projectcitybuild.com \
#            --agree-tos \
#            --no-eff-email \
#            --staging -d projectcitybuild.com -d www.projectcitybuild.com

    mariadb:
        image: "mariadb:10.5"
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_USER: "${DB_USERNAME}"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
        volumes:
            - "mysql:/var/lib/mysql"
        networks:
            - pcb-web

    redis:
        image: "redis:alpine"
        ports:
            - "6379:6379"
        volumes:
            - "redis:/data"
        networks:
            - pcb-web

    mailhog:
        image: "mailhog/mailhog:latest"
        ports:
            - "1025:1025"
            - "8025:8025"
        networks:
            - pcb-web

    stripe:
        image: "stripe/stripe-cli:latest"
        environment:
          STRIPE_API_KEY: "${STRIPE_SECRET}"
          STRIPE_DEVICE_NAME: "${STRIPE_DEVICE_NAME:-docker-local-stripe-cli}"
        command: listen --forward-to http://nginx/api/webhooks/stripe
        volumes:
            - "./docker/stripe:/usr/local/share/stripe-fixtures"
        networks:
            - pcb-web

    minio:
        image: "minio/minio:RELEASE.2021-01-05T05-22-38Z"
        ports:
            - "9000:9000"
        environment:
              MINIO_ROOT_USER: "minio"
              MINIO_ROOT_PASSWORD: "minio"
        command: server /data
        volumes:
            - "minio:/data"
        networks:
            - pcb-web
#        healthcheck:
#            test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
#            interval: 30s
#            timeout: 20s
#            retries: 3

networks:
    pcb-web:
        driver: bridge

volumes:
    mysql:
        driver: local
    redis:
        driver: local
    minio:
        driver: local
#    certbot-etc:
#    certbot-var:
#    dhparam:
#        driver: local
#        driver_opts:
#            type: none
#            device: dhparam/
#            o: bind
