name: PHP Test

on: push

jobs:
  test:
    runs-on: ubuntu-latest

#    services:
#      mysql:
#        image: mariadb:10.3
#        env:
#          MYSQL_ROOT_PASSWORD: root
#          MYSQL_DATABASE: pcb
#        ports:
#          - 3306
#        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Build Docker containers
        run:  docker-compose up -d

      - name: Copy environment
        run:  docker-compose exec php-fpm cp .env.ci .env

      - name: Validate composer.json and composer.lock
        run:  docker-compose exec php-fpm composer validate

#      - name: Get Composer Cache Directory
#        id: composer-cache
#        run: |
#          echo "::set-output name=dir::$(composer config cache-files-dir)"
#      - uses: actions/cache@v1
#        with:
#          path: ${{ steps.composer-cache.outputs.dir }}
#          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-composer-

      - name: Composer dependencies
        run:  docker-compose exec php-fpm composer install --no-interaction

      - name: NPM Install
        run:  docker-compose exec php-fpm npm ci

      - name: NPM Build
        run:  docker-compose exec php-fpm npm run prod

      - name: Generate Key
        run:  docker-compose exec php-fpm php artisan key:generate

      - name: Prepare Database
        run:  docker-compose exec php-fpm php artisan migrate

      - name: Larastan
        run:  docker-compose exec php-fpm ./vendor/bin/phpstan analyse --memory-limit=1G

      - name: PHPUnit
        env:
          DB_CONNECTION: mysql
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run:  docker-compose exec php-fpm phpdbg -dmemory_limit=1G -qrr vendor/bin/phpunit --coverage-clover tests/coverage/clover.xml

      - name: Upload coverage
        run:  docker-compose exec php-fpm curl -s https://codecov.io/bash | bash -f
